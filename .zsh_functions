# ~/.zsh_functions/my_functions.sh

create_indeed_branch() {
    git checkout -b jira/iam_ibarragan/WORDPRESS-$1
}

osite() {
	current_directory=$(basename "$PWD")

	brave-browser $current_directory/wp-admin/
}

pcurrentBranch() {
	git branch --show-current | xargs git push origin
}

# Creates a new directory and cd into it. Creates dirs multiple levels.
# Usage: mkdirchange myfolder
# Example 1: mkdirchange myfolder
# Example 2: mkdirchange myfolder/some/depper/level
mkdirchange () {
	dirname=$1
	mkdir -p $dirname && cd $dirname
}

# Check if site is multisite.
# Usage: icheckmultisite <site>
# Example: icheckmultisite indeeddev
icheckmultisite() {
	site=$1
	plugin=$2
	docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root db tables | grep -q 'wp_blogs' && echo 'Multisite is enabled' || echo 'Multisite is not enabled'"

}

rpass_multisite() {
	site=$1
	docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root user update iam_ibarragan --user_pass=toor"; docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root plugin deactivate miniorange-oauth-oidc-single-sign-on miniorange-force-authentication-addon --network --skip-plugins"

}

rpass() {
	site=$1
	WPDEV_PATH=~/Documents/WORK/repositories/wpdev/www/
	docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root user update iam_ibarragan --user_pass=toor"; docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root plugin deactivate miniorange-oauth-oidc-single-sign-on miniorange-force-authentication-addon --skip-plugins"

}

# Install a plugin from a ZIP file in a site.
# Usage: ipluginsite <site> <zip_file>
# Example: ipluginsite indeeddev advanced-custom-fields-pro.zip
ipluginsite() {
	site=$1
	plugin=$2
	docker exec -i wpdev-php bash -c "cd $site.wpengine.test && wp --allow-root plugin install ../$plugin --force"

}

# Remove untracked files and folder.
# Usage: duntrackfiles
# Example: duntrackfiles
duntrackfiles() {
	git status --porcelain | grep "??" | sed 's/^?? //' | xargs rm -rf
}
# Retrieve a file from a WPEngine site
# Usage: scpget <instance> <remote_file>
# Example: scpget indeeddev wp-contents/plugins/example/remote_file.php 
function scpget() {
        scp -O $1@$1.ssh.wpengine.net:~/sites/$1/$2 .
}

jira_commit(){
	echo -n "Jira ID: "
	read id

	echo -n "Message: "
	read message

	git commit -m "WORDPRESS-$id: $message"
}

# Add Team to a websites
function add_team_to_site() {
  site=$1
  ldaps=("iam_socano" "iam_rsibrian" "iam_ibarragan" "iam_jfagner" "iam_mvunge" "iam_dsanchez" "iam_jrodriguez")

  wp_user_create=""
  wp_super_admin=""
  for ldap in ${ldaps[@]}
  do
    wp_user_create+="wp user create $ldap $ldap@contractor.indeed.com --role=administrator; "
    wp_super_admin+="wp super-admin add $ldap; "
  done

  # for site in 
  echo "Adding users to $site"
  ssh $site@$site.ssh.wpengine.net "cd sites/$site; echo 'Creating user on $site'; $wp_user_create $wp_super_admin exit;"
}

change_to_site_dev() {
    local site_id=$1
    # Create a new tmux window for the website. We don't select a window number since Tmux will switch to the new window.
    tmux new-window -n DEV_$site_id
    # Now we change or PWD to the Site ID.
    tmux send-keys "cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/" C-m
    tmux send-keys "git checkout development; git pull; git checkout staging; git pull; git checkout development; git branch" C-m
}

wp_indeed_updates() {
    local new_branch=""
    local jira_id=""
    local site_id=""
    local db_update=""

    # Parse command-line options
    OPTS=$(getopt -o n:j:s:d:m: --long new-branch:,jira-id:,site-id:,db-update:,multisite: -n 'wp_indeed_update' -- "$@")
    if [ $? != 0 ]; then
        echo -e "\e[91mInvalid option provided\e[0m" >&2
        return 1
    fi
    eval set -- "$OPTS"

    # Extract options and their arguments
    while true; do
        case "$1" in
            -n|--new-branch)
                new_branch="$2"
                shift 2
                ;;
            -j|--jira-id)
                jira_id="$2"
                shift 2
                ;;
            -s|--site-id)
                site_id="$2"
                shift 2
                ;;
            -d|--db-update)
                db_update="$2"
                shift 2
                ;;
            -m|--multisite)
                multisite="$2"
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                echo -e "\e[91mInvalid option provided\e[0m" >&2
                return 1
                ;;
        esac
    done

    # Create a new tmux window for the website. We don't select a window number since Tmux will switch to the new window.
    tmux new-window -n WP_Updates_for_$site_id
     

    # Now we change or PWD to the Site ID.
    tmux send-keys "cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/" C-m
    # Enable VPN
    tmux send-keys "warp-cli connect" C-m

    if [ "$new_branch" = "yes" ]; then
        tmux send-keys "git checkout development; git pull; git checkout -b jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
    else
       tmux send-keys "git checkout jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git pull origin jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git checkout development" C-m
       tmux send-keys "git pull" C-m
       tmux send-keys "git checkout jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git merge development --no-edit" C-m
    fi

    if [ "$db_update" = "yes" ]; then
		UPDATE_PASS="docker exec -i wpdev-php bash -c 'cd $site_id.wpengine.test && wp --allow-root user update iam_ibarragan --user_pass=toor'"
		DEACTIVATE_MULTI="docker exec -i wpdev-php bash -c 'cd $site_id.wpengine.test && wp --allow-root plugin deactivate miniorange-oauth-oidc-single-sign-on miniorange-force-authentication-addon --network --skip-plugins'"
		DEACTIVATE_SINGLE="docker exec -i wpdev-php bash -c 'cd $site_id.wpengine.test && wp --allow-root plugin deactivate miniorange-oauth-oidc-single-sign-on miniorange-force-authentication-addon --skip-plugins'"
        # Now we update the database.
        tmux send-keys "cd ~/Documents/WORK/INDEED/repositories/wpdev/" C-m
		# We reset the password.
		# Deactivate the miniorange plugins for multisite or single.
		if [ "multisite" = "yes" ]; then
			tmux send-keys "./wpdev update-db $site_id --use-local-db; cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/; warp-cli disconnect; $UPDATE_PASS; $DEACTIVATE_MULTI" C-m
		else
			tmux send-keys "./wpdev update-db $site_id --use-local-db; cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/; warp-cli disconnect; $UPDATE_PASS; $DEACTIVATE_SINGLE" C-m
		fi
    else
        # Disable VPN
        tmux send-keys "warp-cli disconnect" C-m
    fi

}

wp_release_indeed() {
    local instance=""
    local jira_id=""
    local site_id=""

    # Parse command-line options
    OPTS=$(getopt -o i:j:s: --long instance:,jira-id:,site-id: -n 'wp_release_indeed' -- "$@")
    if [ $? != 0 ]; then
        echo -e "\e[91mInvalid option provided\e[0m" >&2
        return 1
    fi
    eval set -- "$OPTS"

    # Extract options and their arguments
    while true; do
        case "$1" in
            -i|--instance)
                instance="$2"
                shift 2
                ;;
            -j|--jira-id)
                jira_id="$2"
                shift 2
                ;;
            -s|--site-id)
                site_id="$2"
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                echo -e "\e[91mInvalid option provided\e[0m" >&2
                return 1
                ;;
        esac
    done


    # Now we change or PWD to the Site ID.
    "cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/" C-m

    if [ "$instance" = "qa" ]; then
        tmux send-keys "git checkout development; git pull; git checkout -b jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
    else
       tmux send-keys "git checkout jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git pull origin jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git checkout development" C-m
       tmux send-keys "git pull" C-m
       tmux send-keys "git checkout jira/iam_ibarragan/WORDPRESS-$jira_id" C-m
       tmux send-keys "git merge development --no-edit" C-m
    fi

    # Now we update the database.
    tmux send-keys "cd ~/Documents/WORK/INDEED/repositories/wpdev/" C-m
    tmux send-keys "./wpdev update-db $site_id --use-local-db; cd ~/Documents/WORK/INDEED/repositories/wpdev/www/$site_id.wpengine.test/" C-m
}

wpe_ssh () {
	ssh -i ~/.ssh/id_rsa_indeed $1@$1.ssh.wpengine.net
}
